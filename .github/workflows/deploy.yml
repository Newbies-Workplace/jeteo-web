name: Deploy Docker Image

on:
  push:
    branches:
      - master
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:

  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js 16.10.0
        uses: actions/setup-node@v2
        with:
          node-version: '16.10.0'
          cache: 'npm'

      - run: npm ci

      - run: npm run lint

  unit-test:
    name: Unit tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js 16.10.0
        uses: actions/setup-node@v2
        with:
          node-version: '16.10.0'
          cache: 'npm'

      - run: npm ci

      - run: npm run test

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [unit-test]

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js 16.10.0
        uses: actions/setup-node@v2
        with:
          node-version: '16.10.0'
          cache: 'npm'

      - run: npm ci

      - run: npm run build

  deploy:
    runs-on: ubuntu-latest
    needs: [build]

    env:
      API_URL: ${{ secrets.API_URL }}

    permissions:
      packages: write
      contents: read

    steps:
      - uses: actions/checkout@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          args: --build-arg API_URL=${{ secrets.API_URL }}
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
